@model TobaccoShop.Models.ProductModels.HookahViewModel

@{
    string title = String.Empty;
    if (Model.ProductId == Guid.Empty)
    {
        title = "Добавление нового товара: Кальян";
    }
    else
    {
        title = "Редактирование товара: Кальян";
    }

    ViewBag.Title = title;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm("AddEditHookah", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        @if (Model.ProductId != Guid.Empty)
        {
            <div>
                <h3>Редактирование товара: Кальян</h3>
            </div>
            <div>
                @Html.HiddenFor(x => x.ProductId)
            </div>
            <div>
                <img src="@Model.Image" />
            </div>
        }
        else
        {
            <div>
                <h3>Добавление нового товара: Кальян</h3>
            </div>
        }
        <div>
            @Html.LabelFor(x => x.Mark, new { @class = "control-label" })
        </div>
        <div>
            @Html.EditorFor(x => x.Mark, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => Model.Mark)
        </div>
    </div>
    <div class="form-group">
        <div>
            @Html.LabelFor(x => x.Model, new { @class = "control-label" })
        </div>
        <div>
            @Html.EditorFor(x => x.Model, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Model)
        </div>
    </div>
    <div class="form-group">
        <div>
            @Html.LabelFor(x => x.Description, new { @class = "control-label" })
        </div>
        <div>
            @Html.EditorFor(x => x.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Description)
        </div>
    </div>
    <div class="form-group">
        <div>
            @Html.LabelFor(x => x.Country, new { @class = "control-label" })
        </div>
        <div>
            @Html.EditorFor(x => x.Country, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Country)
        </div>
    </div>
    <div class="form-group">
        <div>
            @Html.LabelFor(x => x.Height, new { @class = "control-label" })
        </div>
        <div>
            @Html.EditorFor(x => x.Height, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Height)
        </div>
    </div>
    <div class="form-group">
        <div>
            @Html.LabelFor(x => x.Price, new { @class = "control-label" })
        </div>
        <div>
            @Html.EditorFor(x => x.Price, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Price)
        </div>
    </div>
    <div class="form-group">
        <div>
            <label class="control-label">Изображение, максимальный размер 270x270</label>
            <label class="label-warning">При добавлении товара, если изображение не задано, будет установлено изображение по умолчанию</label>
            <input type="file" name="uploadImage" />
        </div>
    </div>
    <div class="form-group">
        <input type="submit" value="Применить" />
        <input type="reset" value="Сброс" />
    </div>
    <div class="form-group">
        @Html.ValidationSummary(true)
    </div>
}